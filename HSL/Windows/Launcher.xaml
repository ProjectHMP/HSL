<Window x:Class="HSL.Windows.Launcher"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HSL"
        xmlns:enums="clr-namespace:HSL.Enums"
        xmlns:core="clr-namespace:HSL.Core"
        mc:Ignorable="d"
        Title="Happiness Server Launcher" Height="447" Width="826"
        Background="Black"
        WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterScreen"
        >
    <Window.Resources>
        <Style x:Key="viewGridStyle" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Hidden"></Setter>
                    <Setter Property="IsHitTestVisible" Value="False"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="{StaticResource bgColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="323*"/>
            <ColumnDefinition Width="436*"/>
        </Grid.ColumnDefinitions>


        <!-- I decided to combine all "views" into one Window -->

        <!-- Grid Definitions -->

        <Grid x:Name="view_settings" Panel.ZIndex="1" Visibility="Hidden" Grid.ColumnSpan="2">

        </Grid>

        <!-- Launcher View -->
        <Grid x:Name="view_launcher" Grid.ColumnSpan="2">
            <!-- Grid Definitions -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- Left Panel -->
            <Grid Grid.RowSpan="2" Grid.Column="0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="25"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="25"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".3*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <!-- Top Tool Bar -->
                <DockPanel>
                    <Menu x:Name="menu_hmp"  HorizontalContentAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                        <MenuItem Background="Transparent" Header="File" Foreground="{StaticResource txtColor}">
                            <MenuItem x:Name="mi_OpenServerPath" Header="Open Server Path" UsesItemContainerTemplate="False"></MenuItem>
                            <MenuItem x:Name="mi_CreateServer" Header="Create New Server"></MenuItem>
                        </MenuItem>
                        <MenuItem Background="Transparent" Header="Server">
                            <MenuItem x:Name="mi_StartServer" Header="Start">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource menuItemStyle}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, NotifyOnSourceUpdated=True, IsAsync=True, Delay=100}" Value="{x:Static enums:ServerState.Stopped}">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem x:Name="mi_StopServer" Header="Stop" DisplayMemberPath="State">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource menuItemStyle}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, NotifyOnSourceUpdated=True, IsAsync=True, Delay=100}" Value="{x:Static enums:ServerState.Started}">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem x:Name="mi_RestartServer" Header="Restart">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=currentInstance.State, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Started}">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem x:Name="mi_UpdateServer" Header="Update Server">
                                <MenuItem.Style>
                                    <Style TargetType="{x:Type MenuItem}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Stopped}">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem x:Name="mi_OpenServerDirectory" Header="Open Directory">
                            </MenuItem>
                            <MenuItem x:Name="mi_DeleteServer" Header="Delete"></MenuItem>
                            <MenuItem.Style>
                                <Style TargetType="{x:Type MenuItem}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=currentInstance, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, Delay=500}" Value="{x:Null}">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=currentInstance.State, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Started}">
                                            <Setter Property="Foreground" Value="Green"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=currentInstance.State, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Stopped}">
                                            <Setter Property="Foreground" Value="Red"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Foreground" Value="White"></Setter>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <!-- <MenuItem Header="Settings" Foreground="{StaticResource txtColor}"></MenuItem> -->
                    </Menu>
                </DockPanel>

                <!-- Server List -->
                <ListView x:Name="lv_ServerList" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" ItemsSource="{Binding manager.servers, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, Mode=OneWay, IsAsync=True, Delay=500}" Background="Transparent" SelectionMode="Single" Foreground="{StaticResource txtColor}" BorderThickness="0 .2 0 .2" DisplayMemberPath="Name" SelectedItem="{Binding currentInstance, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"></ListView>

                <!-- Console -->
                <RichTextBox x:Name="rtb_ServerLog"  DataContext="{Binding currentInstance, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, IsAsync=True, Delay=500}" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Background="{StaticResource cmdBgColor}" IsReadOnly="True" IsReadOnlyCaretVisible="True" BorderThickness=".2 .2 .2 0" Foreground="{StaticResource txtColor}">
                    <FlowDocument>
                        <Paragraph FontSize="10" Padding="2">
                            <ItemsControl ItemsSource="{Binding ServerLog, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, IsAsync=True, NotifyOnSourceUpdated=True, Delay=500}" FontSize="10"></ItemsControl>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>

                <!-- Clear Console Button -->
                <Button x:Name="btn_ClearServerLog" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Background="Transparent" Width="40" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="10" BorderThickness=".005">CLEAR</Button>

                <!-- Console Input -->
                <TextBox x:Name="tb_ServerCmd" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Background="{StaticResource cmdBgColor}" Foreground="{StaticResource txtColor}" VerticalContentAlignment="Center" Padding="3 0 0 0" BorderThickness="0 .2 .2 0">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="IsEnabled" Value="False"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Started}">
                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <!-- Ghost Preview TextBox -->
                <TextBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Background="Transparent" Foreground="White" Margin="0" Padding="5 0 0 0" VerticalContentAlignment="Center" IsHitTestVisible="False" Opacity="0.2" Text="Enter Command Here">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Visibility" Value="Hidden"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=tb_ServerCmd, Path=Text.Length, UpdateSourceTrigger=PropertyChanged}" Value="0">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>

            <!-- Right Panel -->
            <Grid Grid.RowSpan="2" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height=".35*"></RowDefinition>
                </Grid.RowDefinitions>

                <!-- Resource List / Resource Controls -->
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height=".5*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <!-- Resource List -->
                    <ListView x:Name="lv_ResourceList" ItemsSource="{Binding currentInstance.Resources, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, Mode=OneWay, IsAsync=True, Delay=500}" Background="Transparent" BorderThickness="0 .2 .2 .2" Foreground="{StaticResource txtColor}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Label Content="{Binding Name}"  Margin="0" Padding="0" FontSize="12">
                                    <Label.Style>
                                        <Style TargetType="{x:Type Label}">
                                            <Setter Property="Foreground" Value="{StaticResource txtColor}"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled}" Value="{StaticResource True}">
                                                    <Setter Property="Foreground" Value="Green"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.Style>
                            <Style TargetType="{x:Type ListView}">
                                <Setter Property="IsHitTestVisible" Value="False"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Started}">
                                        <Setter Property="IsHitTestVisible" Value="True"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Style>
                    </ListView>

                    <!-- Resource Controls -->
                    <StackPanel Grid.Column="1" Orientation="Vertical">
                        <!-- Start Button -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width=".3*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btn_StartResource" Grid.Column="0" Content="Start">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource btnStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                                <Setter Property="IsEnabled" Value="False"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="btn_StartAllResources" Grid.Column="1" Content="All">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource btnStyle}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Started}">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        <!-- Stop Button -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width=".3*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btn_StopResource" Content="Stop">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource btnStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                                <Setter Property="IsEnabled" Value="False"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="btn_StopAllResources" Grid.Column="1" Content="All">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource btnStyle}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Started}">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        <!-- Reload Button -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width=".3*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btn_ReloadResource" Content="Reload">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource btnStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex, UpdateSourceTrigger=PropertyChanged}" Value="-1">
                                                <Setter Property="IsEnabled" Value="False"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="btn_ReloadAllResources" Grid.Column="1" Content="All">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource btnStyle}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding currentInstance.State, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:ServerState.Started}">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>

                        <Label Content="Automatic Settings" Foreground="{StaticResource txtColor}" FontSize="10" HorizontalContentAlignment="Center" Padding="5" FontWeight="Bold"></Label>
                        <CheckBox Padding="0" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Margin="5 0 0 0" Cursor="Hand" IsChecked="{Binding currentInstance.AutoReloadResources, UpdateSourceTrigger=PropertyChanged, FallbackValue={StaticResource False}}">
                            <Label Foreground="White" Margin="5 0 0 0" FontSize="12" Padding="0" VerticalContentAlignment="Center" Content="Reload Resources" ToolTip="Enabling will automatically reload resource(s) when they're modified."></Label>
                        </CheckBox>
                        <CheckBox Padding="0" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Margin="5 0 0 0" Cursor="Hand" IsChecked="{Binding currentInstance.AutoStart, UpdateSourceTrigger=PropertyChanged, FallbackValue={StaticResource False}}">
                            <Label Foreground="White" Margin="5 0 0 0" FontSize="12" Padding="0" VerticalContentAlignment="Center" Content="Start" ToolTip="Enabling will automatically start the server when HSL starts."></Label>
                        </CheckBox>
                        <CheckBox Padding="0" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Margin="5 0 0 0" Cursor="Hand" IsChecked="{Binding currentInstance.AutoRestart, UpdateSourceTrigger=PropertyChanged, FallbackValue={StaticResource False}}">
                            <Label Foreground="White" Margin="5 0 0 0" FontSize="12" Padding="0" VerticalContentAlignment="Center" Content="Restart" ToolTip="Enabling allows the server to restart if crashes (unintentionally)."></Label>
                        </CheckBox>

                    </StackPanel>
                    <Grid Grid.Row="1" Grid.ColumnSpan="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.ColumnSpan="2" Content="Server Settings" Foreground="{StaticResource txtColor}" FontSize="10" HorizontalContentAlignment="Center" Padding="0" Margin="0" FontWeight="Bold"></Label>

                        <Label Grid.Row="1" Grid.Column="0" Content="Hostname" Foreground="{StaticResource txtColor}" FontSize="10" Padding="5 0 0 0" Margin="0"></Label>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding currentInstance.Hostname, IsAsync=True}" Background="{StaticResource cmdBgColor}" Foreground="{StaticResource txtColor}" VerticalContentAlignment="Center" FontSize="13"></TextBox>

                        <Label Grid.Row="2" Grid.Column="0" Content="Port" Foreground="{StaticResource txtColor}" FontSize="10" Padding="5 0 0 0" Margin="0"></Label>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding currentInstance.Port}"  Margin="0" Padding="2 0 0 0" Foreground="{StaticResource txtColor}" Background="{StaticResource cmdBgColor}" VerticalContentAlignment="Center" FontSize="13"></TextBox>

                        <Label Grid.Row="3" Grid.Column="0" Content="Listed" FontSize="10" Padding="5 0 0 0" Margin="0">
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Setter Property="Foreground" Value="Red"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding currentInstance.Listed, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="{StaticResource True}">
                                            <Setter Property="Foreground" Value="Green"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <CheckBox Grid.Row="3" Grid.Column="1" IsChecked="{Binding currentInstance.Listed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Background="Transparent" Foreground="White" VerticalContentAlignment="Center" FontSize="13" Padding="50"></CheckBox>

                        <Label Grid.Row="4" Grid.Column="0" Content="Episode" Foreground="{StaticResource txtColor}" FontSize="10" Padding="5 0 0 0" Margin="0"></Label>
                        <ComboBox Grid.Row="4" Grid.Column="2" ItemsSource="{x:Static local:Constants.Episodes}" Margin="0" Padding="0 0 0 0" FontSize="13" SelectedItem="{Binding currentInstance.Episode}" Background="{StaticResource cmdBgColor}" VerticalContentAlignment="Center" >

                        </ComboBox>
                    </Grid>
                </Grid>
                <Grid Grid.Row="2" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Border Grid.Row="1" Background="Transparent"  BorderBrush="#4682B4" BorderThickness="0 .2 0 .2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition Height="20"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.ColumnSpan="5" Foreground="{StaticResource txtColor}" FontSize="10" VerticalContentAlignment="Center" Padding="5 0 0 0" FontWeight="Bold">Auto Restart Scheduler (H:M:S)</Label>
                            <Grid Grid.Row="1" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="10"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="10"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <TextBox Grid.Column="0" Background="Transparent" Margin="5 0 5 0" Padding="0 0 0 0" HorizontalContentAlignment="Center" Foreground="{StaticResource txtColor}" Text="{Binding currentInstance.RestartTimer_Hours, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
                                <Label Grid.Column="1" Margin="0" Padding="0" HorizontalContentAlignment="Center" Content=":" Foreground="{StaticResource txtColor}" FontWeight="Bold"></Label>
                                <TextBox Grid.Column="2" Background="Transparent" Margin="5 0 5 0" Padding="0 0 0 0" HorizontalContentAlignment="Center" Foreground="{StaticResource txtColor}" Text="{Binding currentInstance.RestartTimer_Minutes, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
                                <Label Grid.Column="3" Margin="0" Padding="0" HorizontalContentAlignment="Center" Content=":" Foreground="{StaticResource txtColor}" FontWeight="Bold"></Label>
                                <TextBox Grid.Column="4" Background="Transparent" Margin="5 0 5 0" Padding="0 0 0 0" HorizontalContentAlignment="Center" Foreground="{StaticResource txtColor}" Text="{Binding currentInstance.RestartTimer_Seconds, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>

                            </Grid>
                            <Grid Grid.Row="3">
                                <RichTextBox Foreground="White" FontSize="8" Background="Transparent" Padding="5" VerticalAlignment="Bottom"  BorderBrush="Yellow" IsReadOnly="True" IsReadOnlyCaretVisible="False" IsHitTestVisible="False">
                                    <FlowDocument>
                                        <Paragraph Foreground="Wheat">
                                            <Run Text="Restarts is only active while running. 24 Hours by default."></Run>
                                        </Paragraph>
                                    </FlowDocument>
                                </RichTextBox>
                            </Grid>

                        </Grid>
                    </Border>
                </Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding currentInstance, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                                <Setter Property="IsHitTestVisible" Value="False"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
        </Grid>

    </Grid>
</Window>
