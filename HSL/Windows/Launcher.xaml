<Window x:Class="HSL.Windows.Launcher"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HSL.Windows"
        xmlns:hsl="clr-namespace:HSL"
        mc:Ignorable="d"
        Title="HMP Server Launcher" Height="450" Width="935"
        Background="Black"
        WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterScreen"
        >
    <Grid Background="{StaticResource bgColor}">

        <!-- Grid Definitions -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <!-- Left Panel -->
        <Grid Grid.RowSpan="2" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="25"></RowDefinition>
            </Grid.RowDefinitions>
            <!-- Tool Bar -->
            <DockPanel>
                <Menu x:Name="menu_hmp"  HorizontalContentAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                    <MenuItem Background="Transparent" Header="File" Foreground="{StaticResource txtColor}">
                        <MenuItem x:Name="mi_OpenServerPath" Header="Open Server Path" UsesItemContainerTemplate="False"></MenuItem>
                        <MenuItem x:Name="mi_CreateServer" Header="Create New Server"></MenuItem>
                    </MenuItem>
                    <MenuItem Background="Transparent" Header="Server">
                        <MenuItem x:Name="mi_StartServer" Header="Start">
                            <MenuItem.Style>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource menuItemStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=currentInstance.state, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, NotifyOnSourceUpdated=True, IsAsync=True, Delay=100}" Value="{x:Static hsl:ServerState.Started}">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem x:Name="mi_StopServer" Header="Stop" DisplayMemberPath="state">
                            <MenuItem.Style>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource menuItemStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding  Path=currentInstance.state, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, NotifyOnSourceUpdated=True, IsAsync=True, Delay=100}" Value="{x:Static hsl:ServerState.Stopped}">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem x:Name="mi_RestartServer" Header="Restart"></MenuItem>
                        <MenuItem x:Name="mi_DeleteServer" Header="Delete"></MenuItem>
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=currentInstance, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, Delay=500}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=currentInstance.state, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="{x:Static hsl:ServerState.Started}">
                                        <Setter Property="Foreground" Value="Green"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=currentInstance.state, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Value="{x:Static hsl:ServerState.Stopped}">
                                        <Setter Property="Foreground" Value="Red"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Foreground" Value="White"></Setter>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Settings" Foreground="{StaticResource txtColor}"></MenuItem>
                </Menu>
            </DockPanel>

            <Grid Grid.Row="1" Grid.RowSpan="2" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".3*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ListView x:Name="lv_ServerList" ItemsSource="{Binding manager.servers, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, Mode=OneWay, IsAsync=True, Delay=500}" Background="Transparent" SelectionMode="Single" Foreground="{StaticResource txtColor}" BorderThickness="0 .2 0 .2" DisplayMemberPath="Name"></ListView>
                <RichTextBox DataContext="{Binding currentInstance, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, IsAsync=True, Delay=500}" x:Name="rtb_ServerLog" Grid.Column="1" Background="{StaticResource cmdBgColor}" IsReadOnly="True" IsReadOnlyCaretVisible="True" BorderThickness=".2 .2 .2 0" Foreground="{StaticResource txtColor}">
                    <FlowDocument>
                        <Paragraph FontSize="13" Padding="5">
                            <ItemsControl ItemsSource="{Binding serverLog, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, IsAsync=True, NotifyOnSourceUpdated=True, Delay=500}"></ItemsControl>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <Button x:Name="btn_ClearServerLog" Grid.Column="1" Background="Transparent" Width="40" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="10" BorderThickness=".005">CLEAR</Button>
            </Grid>
            <TextBox x:Name="tb_ServerCmd" Grid.Row="3" Background="{StaticResource cmdBgColor}" Foreground="{StaticResource txtColor}" VerticalContentAlignment="Center" Padding="3 0 0 0" BorderThickness="0 .2 .2 0">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="IsEnabled" Value="False"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding currentInstance.state}" Value="{x:Static hsl:ServerState.Started}">
                                <Setter Property="IsEnabled" Value="True"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBox Grid.Row="3" Background="Transparent" Foreground="White" Margin="0" Padding="5 0 0 0" VerticalContentAlignment="Center" IsHitTestVisible="False" Opacity="0.2" Text="Enter Command Here">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Visibility" Value="Hidden"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=tb_ServerCmd, Path=Text.Length}" Value="0">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Grid>

        <!-- Right Panel -->
        <Grid Grid.RowSpan="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height=".5*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ListView x:Name="lv_ResourceList" ItemsSource="{Binding currentInstance.resources,UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, Mode=OneWay, IsAsync=True, Delay=500}" Background="Transparent" BorderThickness="0 .2 .2 .2" Foreground="{StaticResource txtColor}"></ListView>
                <StackPanel Grid.Column="1" Orientation="Vertical">
                    <Button x:Name="btn_StartResource" Content="Start">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource btnStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex}" Value="-1">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Setter Property="Opacity" Value=".2"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btn_StopResource" Content="Stop">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource btnStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex}" Value="-1">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Setter Property="Opacity" Value=".2"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btn_ReloadResource" Content="Reload">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource btnStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex}" Value="-1">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Setter Property="Opacity" Value=".2"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Separator Height="25" BorderThickness="1" BorderBrush="#4682B4" Padding="0" Margin="0"></Separator>
                    <Button x:Name="btn_ReloadAllResources" Content="Reload All"></Button>
                    <Button x:Name="btn_StopAllResources" Content="Stop All"></Button>
                    <Separator Height="25" BorderThickness="1" BorderBrush="#4682B4" Padding="0" Margin="0"></Separator>
                    <CheckBox Padding="0" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Margin="5 0 0 0" Cursor="Hand">
                        <Label Foreground="White" Margin="5 0 0 0" FontSize="12" Padding="0" VerticalContentAlignment="Center" >Auto Reload Resources</Label>
                    </CheckBox>
                    <CheckBox Padding="0" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Margin="5 0 0 0" Cursor="Hand">
                        <Label Foreground="White" Margin="5 0 0 0" FontSize="12" Padding="0" VerticalContentAlignment="Center" >Auto Start</Label>
                    </CheckBox>
                    <CheckBox Padding="0" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Margin="5 0 0 0" Cursor="Hand">
                        <Label Foreground="White" Margin="5 0 0 0" FontSize="12" Padding="0" VerticalContentAlignment="Center" >Enable Auto Restart</Label>
                    </CheckBox>

                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="IsEnabled" Value="False"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding currentInstance.state, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static hsl:ServerState.Started}">
                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>

            </Grid>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Label Foreground="{StaticResource txtColor}" FontSize="10" VerticalContentAlignment="Center" Padding="5 0 0 0">Auto Restart Scheduler</Label>
                <Border Grid.Row="1" Background="Transparent"  BorderBrush="#4682B4" BorderThickness="0 .2 0 .2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Foreground="White" Padding="0" Margin="0" Width="50">Hours</Label>
                            <Separator Grid.Column="1" Width="50"></Separator>
                            <TextBox Grid.Column="2" Background="{StaticResource cmdBgColor}"></TextBox>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Foreground="White" Padding="0" Margin="0" Width="50">Minutes</Label>
                            <Separator Grid.Column="1" Width="50"></Separator>
                            <TextBox Grid.Column="2" Background="{StaticResource cmdBgColor}"></TextBox>
                        </Grid>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Foreground="White" Padding="0" Margin="0" Width="50">Seconds</Label>
                            <Separator Grid.Column="1" Width="50"></Separator>
                            <TextBox Grid.Column="2" Background="{StaticResource cmdBgColor}"></TextBox>
                        </Grid>
                        <Grid Grid.Row="3">
                            <RichTextBox Foreground="White" FontSize="8" Background="Transparent" Padding="5" VerticalAlignment="Center" BorderBrush="Yellow" IsReadOnly="True" IsReadOnlyCaretVisible="False" IsHitTestVisible="False">
                                <FlowDocument>
                                    <Paragraph Foreground="Wheat">
                                        <Run Text="Auto Restart is only active when server is running. Changing values above will also re-start the scheduler"></Run>
                                    </Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                        </Grid>

                    </Grid>
                </Border>
            </Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding currentInstance}" Value="{x:Null}">
                            <Setter Property="IsHitTestVisible" Value="False"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</Window>
