<Window x:Class="HSL.Windows.Launcher"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HSL.Windows"
        xmlns:converters="clr-namespace:HSL.Converters"
        mc:Ignorable="d"
        Title="HMP Server Launcher" Height="450" Width="935"
        Background="Black"
        WindowStyle="SingleBorderWindow" WindowStartupLocation="CenterScreen"
        >
    <Window.Resources>
        <SolidColorBrush x:Key="cmdBgColor" Color="#7F1B1B1B"></SolidColorBrush>
        <SolidColorBrush x:Key="cmdTxtColor" Color="White"></SolidColorBrush>
        <SolidColorBrush x:Key="bgColor" Color="Black"></SolidColorBrush>
        <SolidColorBrush x:Key="txtColor" Color="White"></SolidColorBrush>
        <Style TargetType="Button" x:Key="btnStyle">
            <Setter Property="BorderThickness" Value=".2"></Setter>
            <Setter Property="Margin" Value="0 0 0 .5"></Setter>
            <Setter Property="Background" Value="#7F1B1B1B"></Setter>
            <Setter Property="Foreground" Value="{StaticResource txtColor}"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="ForceCursor" Value="True"></Setter>
            <Setter Property="Opacity" Value=".8"></Setter>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black"></Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value=".1"></Setter>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource btnStyle}"></Style>

        <Style TargetType="RichTextBox">
            <Setter Property="BorderThickness" Value=".2"></Setter>
            <Setter Property="BorderBrush" Value="#4682B4"></Setter>
        </Style>
        <Style TargetType="ListView">
            <Setter Property="BorderThickness" Value=".2"></Setter>
            <Setter Property="BorderBrush" Value="#4682B4"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="BorderThickness" Value=".2"></Setter>
            <Setter Property="BorderBrush" Value="#4682B4"></Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Background" Value="#7F1B1B1B"></Setter>
            <Setter Property="BorderThickness" Value=".5"></Setter>
            <Setter Property="BorderBrush" Value="#4682B4"></Setter>
        </Style>
        <Style x:Key="menuItemStyle" TargetType="MenuItem">
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
        </Style>

        <Style TargetType="MenuItem" BasedOn="{StaticResource menuItemStyle}"></Style>
    </Window.Resources>

    <Grid Background="{StaticResource bgColor}">

        <!-- Grid Definitions -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"></ColumnDefinition>
            <ColumnDefinition Width="1*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <!-- Left Panel -->
        <Grid Grid.RowSpan="2" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="25"></RowDefinition>
            </Grid.RowDefinitions>
            <!-- Tool Bar -->
            <DockPanel>
                <Menu x:Name="menu_hmp" DataContext="{Binding FallbackValue={x:Null}, IsAsync=True}" HorizontalContentAlignment="Center" VerticalAlignment="Center" Background="Transparent" Foreground="{StaticResource txtColor}">
                    <MenuItem Background="Transparent" Header="File" Foreground="{StaticResource txtColor}">
                        <MenuItem x:Name="mi_OpenServerPath" Header="Open Server Path" UsesItemContainerTemplate="False"></MenuItem>
                        <MenuItem Header="Create New Server"></MenuItem>
                    </MenuItem>
                    <MenuItem  Background="Transparent" Header="Server" Foreground="{StaticResource txtColor}">
                        <MenuItem x:Name="mi_StartServer" Header="Start">
                            <MenuItem.Style>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource menuItemStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=currentInstance.state, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, NotifyOnSourceUpdated=True, IsAsync=True, Delay=100}" Value="Started">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem x:Name="mi_StopServer" Header="Stop" DisplayMemberPath="state">
                            <MenuItem.Style>
                                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource menuItemStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding  Path=currentInstance.state, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, NotifyOnSourceUpdated=True, IsAsync=True, Delay=100}" Value="Stopped">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem x:Name="mi_RestartServer" Header="Restart"></MenuItem>
                        <MenuItem Header="Delete"></MenuItem>
                        <MenuItem.Style>
                            <Style TargetType="{x:Type MenuItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=currentInstance, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True, NotifyOnSourceUpdated=True, Delay=500}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Settings" Foreground="{StaticResource txtColor}"></MenuItem>
                </Menu>
            </DockPanel>

            <Grid Grid.Row="1" Grid.RowSpan="2" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".3*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ListView x:Name="lv_ServerList" ItemsSource="{Binding servers, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, Mode=OneWay, IsAsync=True, Delay=500}" Background="Transparent" SelectionMode="Single" Foreground="{StaticResource txtColor}" BorderThickness="0 .2 0 .2" DisplayMemberPath="Name">
                    
                </ListView>
                <RichTextBox DataContext="{Binding}" x:Name="rtb_ServerLog" Grid.Column="1" Background="{StaticResource cmdBgColor}" IsReadOnly="True" IsReadOnlyCaretVisible="True" BorderThickness=".2 .2 .2 0" Foreground="{StaticResource txtColor}">
                    <FlowDocument>
                        <Paragraph>
                            <ItemsControl ItemsSource="{Binding serverLog, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, IsAsync=True, NotifyOnSourceUpdated=True, Delay=500}"></ItemsControl>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox>
                <Button x:Name="btn_ClearServerLog" Grid.Column="1" Background="Transparent" Width="40" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="10" BorderThickness=".005">CLEAR</Button>
            </Grid>
            <TextBox x:Name="tb_ServerCmd" Grid.Row="3" Background="{StaticResource cmdBgColor}" Foreground="{StaticResource txtColor}" VerticalContentAlignment="Center" Padding="3 0 0 0" BorderThickness="0 .2 .2 0"></TextBox>
        </Grid>

        <!-- Right Panel -->
        <Grid Grid.RowSpan="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height=".5*"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ListView x:Name="lv_ResourceList" Background="Transparent" BorderThickness="0 .2 .2 .2" Foreground="{StaticResource txtColor}"></ListView>
                <StackPanel Grid.Column="1" Orientation="Vertical">
                    <Button x:Name="btn_StartResource" Content="Start">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource btnStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex}" Value="-1">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Setter Property="Opacity" Value=".2"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btn_StopResource" Content="Stop">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}"  BasedOn="{StaticResource btnStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex}" Value="-1">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Setter Property="Opacity" Value=".2"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btn_ReloadResource" Content="Reload">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource btnStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=lv_ResourceList, Path=SelectedIndex}" Value="-1">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Setter Property="Opacity" Value=".2"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Separator Height="25"></Separator>
                    <Button x:Name="btn_ReloadAllResources">Reload All</Button>
                    <Button x:Name="btn_StopAllResources">Stop All</Button>
                </StackPanel>

            </Grid>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Label Foreground="{StaticResource txtColor}" FontSize="10" VerticalContentAlignment="Center" Padding="5 0 0 0">Task Scheduler</Label>
                <Border Grid.Row="1" Background="Transparent"  BorderBrush="#4682B4" BorderThickness="0 .2 0 .2">
                    <Label Foreground="White">In Development</Label>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Window>
