name: publish

on:
  workflow_dispatch:
    inputs:
      version_tag:
        type: string
        description: 'Version Tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      release_title:
        type: string
        description: 'Release Title'
        required: true
        default: 'Release Title'
      is_pre_release:
        type: boolean
        description: 'Is Pre-Release?'
        required: true
        default: true
      is_draft:
        type: boolean
        description: 'Is Draft?'
        required: true
        default: false
      body:
        type: string
        description: 'Body Insert..'
        required: false
        default: 'Release Info'

env:
  DOTNET_VERSION: '3.1' # The .NET SDK version to use
  DOTNET_INSTALL_DIR: '.\.dotnet'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions: write-all

jobs:
  publish:
    if: github.event_name == 'workflow_dispatch'
    name: Windows Build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
        path: ${{ env.DOTNET_INSTALL_DIR }}
        key: ${{ runner.os }}-dotnet-3
        restore-keys: ${{ runner.os }}-dotnet-3
    
    - name: Setup .NET Core
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Set installed/cached dotnet path [${{ env.DOTNET_INSTALL_DIR }}]
      run: echo "${{ env.DOTNET_INSTALL_DIR }}" | Out-File -FilePath $ENV:GITHUB_PATH -Encoding utf8 -Append
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Publish
      run: dotnet publish -p:PublishProfile=FolderProfile -c Release -f netcoreapp3.1 -r win-x64 -o ./publish/

    - name: Create Hash
      run: certutil.exe -hashfile ./publish/HSL.exe MD5 | find /i /v "md5" | find /i /v "certutil" > ./publish/HSL.md5
      shell: cmd
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: ./publish/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.event.inputs.version_tag }}
        release_name: ${{ github.event.inputs.release_title }}
        body: ${{ github.event.inputs.body }}
        draft: ${{ github.event.inputs.is_draft }}
        prerelease: ${{ github.event.inputs.is_pre_release }}
        
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-output

    - name: Uploading HSL.exe
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/HSL.exe
        asset_name: HSL.exe
        asset_content_type: application/octet-stream

    - name: Uploading HSL.md5
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/HSL.md5
        asset_name: HSL.md5
        asset_content_type: application/octet-stream

    - name: Uploading Symbols (.pdb)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./publish/HSL.pdb
        asset_name: HSL.pdb
        asset_content_type: application/octet-stream
